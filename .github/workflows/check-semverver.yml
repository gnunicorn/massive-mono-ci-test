# This is a basic workflow to help you get started with Actions

name: check for semver

env:
  NIGHTLY_VERSION: nightly-2020-06-02

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  pull_request:
    branches: [ stable ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

    - uses: actions/cache@v2
      with:
        path: |
          ~/.rustup/
          ~/.cargo/registry
          ~/.cargo/git
          ~/.cargo/bin
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - uses: actions/checkout@v2
      with:
        ref: stable
        path: stable
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      with:
        path: new
    - name: Install nightly
      uses: actions-rs/toolchain@v1
      with:
          toolchain: ${{ env.NIGHTLY_VERSION }}
          override: true
          components: rustc-dev, llvm-tools-preview
    # - name: Install master toolchain
    #   run: |
    #     cargo +nightly install rustup-toolchain-install-master
    #     rustup-toolchain-install-master eeaf497b2a6bc065874e3d3367b1f3023c5bb3d3 -f -n master -c rustc-dev -c llvm-tools
    - name: Install semverver
      run: cargo +${{ env.NIGHTLY_VERSION }} install --git https://github.com/rust-dev-tools/rust-semverver

    - name: Check semver compability
      run: |
        members=(`grep -Eo '"[^"]+"' Cargo.toml | tr -d '"'`)
        changes=`git diff --name-only stable..`

        for member in ${members[@]}; do
            if [[ "${changes}" =~ "${member}" ]]; then
                echo "-- ${member} changed. Checking semver"
                cargo +${{ env.NIGHTLY_VERSION }} semver \
                  --stable-path "$GITHUB_WORKSPACE/stable/${member}/Cargo.toml" \
                  --current-path "$GITHUB_WORKSPACE/new/${member}/Cargo.toml" \
                  -j > changes.json
                cat changes.json
                new_version=`cat changes.json | jq .new_version -M`;
                if [[ "$new_version" -ne "null" ]] ; then
                  echo "Bumping ${member} to $new_version"
                  sed -i '0,/^version.*$/s//version = "2.1.0"/' "$GITHUB_WORKSPACE/new/${member}/Cargo.toml"
                else
                  echo "No update necessary"
                fi
            else
                echo "Skipped ${member} -- not modified"
            fi
        done
      
    - name: Submit new Versions
      secrets: ["GITHUB_TOKEN"]
      run: |
        git config --global user.name '${GITHUB_ACTOR}'
        git config --global user.email '${GITHUB_ACTOR}@users.noreply.github.com'
        cd new
        if ! git diff-index --quiet HEAD --; then
          git status
          git add **/Cargo.toml
          git commit -m"Bumping versions"
          git push -u origin HEAD
        fi

